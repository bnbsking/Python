DP 0
62. Unique Paths
63. Unique Paths II
64. Minimum Path Sum
118. Pascal's Triangle
119. Pascal's Triangle II
120. Triangle
303. Range Sum Query - Immutable
304. Range Sum Query 2D - Immutable
931. Minimum Falling Path Sum
935. Knight Dialer

DP 1d Backward
45. Jump Game II | i=1. nums[i] = max(nums[i-1], nums[i]+i). Transform array to "farthest index can go"
55. Jump Game | same as 45
91. Decode Ways | init 2. 4 cases: 00, 01~09/27~, 10/20, 11~19/21~26
198. House Robber | init 3. L.append( max(L[-3],L[-2])+nums[i] ), return max(L[-1],L[-2])
213. House Robber II | same as 198 but exclude first and last respectively, return max(L[-1],M[-1])
279. Perfect Squares | L = [0,1]; for i in range(2,n+1): L.append( min( L[i-x**2]+1 for x in squares if i-x**2 >=0 ) )
300. Longest Increasing Subsequence | similar to 279
338. Counting Bits | L=[0]*(n+1), i=1. L[i]=L[i//2]+i%2
368. Largest Divisible Subset | init1. similar to 300 but each cell stores divisors
646. Maximum Length of Pair Chain | init 1. similar to 300
823. Binary Trees With Factors | init D[ele]->idx, [1]*len(arr). similar to 300
1846. Maximum Element After Decreasing and Rearranging | sort, for loop revise
2707. Extra Characters in a String | init 1. similar to 300.

DP 1d Forward
139. Word Break | init [True]+[False]*len(s). for i if L[i] for word: if s[i:i+len(word)]==word: L[i+len(word)]=True
204. Count Primes | Sieve of Eratosthenes: L=[F,F]+[T]*(n-2); for i in range(2,int(n**0.5)+1): if L[i]: for j in range(i*i, n, i): L[j]=F
264. Ugly Number II | init 2, j=2, i2=i3=i5=1. L.append( min(L[i2]*2,L[i3]*3,L[i5]*5) ); i2, i3, i5 = i2+int(L[-1]==L[i2]*2), i3+int(L[-1]==L[i3]*3), i5+int(L[-1]==L[i5]*5)
    Any ugly number must depends are previous ugly numbers (3 candidates) so the candidates updated by next least larger. Both co-factor should be updated as well.
313. Super Ugly Number | same as 264
322. coin change | init [0]+[inf]*amount. for i for coin: if i+c<len(L): L[i+c] = min(L[i+c], L[i]+1)
377. Combination Sum IV | init [1]+[0]*target. for i for num: if i+x<len(L): L[i+x] += L[i]
1048. Longest String Chain | Must sort by len first. Create "next node" graph where key=remove_each_char. init [1]*len(words). for i for nei_idx: L[nei_idx] = max(L[nei_idx], L[i]+1)
135*. Candy | for i in range(R): if i is smallest: lr expand (L[r]=max(L[r],L[r-1]+1))

DP Arr2d Backward
72. Edit Distance | init 1r1c. L[i][j] = 1 + min(L[i-1][j-1], L[i-1][j], L[i][j-1])
97. Interleaving String | init 1r1c. T[i][j] = (T[i-1][j] and s1[i-1]==s3[i+j-1]) or (T[i][j-1] and s2[j-1]==s3[i+j-1])
221. Maximal Square  | init 1r1c. L[i][j] = L[i][j] * (min(L[i-1][j-1], L[i-1][j], L[i][j-1]) + 1)
474. Ones and Zeroes | init all 0s. for s in strs for i in range(m,c0-1,-1) for j in range(n,c1-1,-1): L[i][j] = max(L[i][j], L[i-c0][j-c1]+1). must reverse order filling !!!
516. Longest Palindromic Subsequence | init diagonal. L[i][j] means f(s[i:j+1]), fill from i-j=0,-1,-2,..., diag0=1 diag1=1 or 2, others: L[i+1][j-1] if s[i]==s[j] else max(L[i+1][j], L[i][j-1])
576. Out of Boundary Paths | init all 0s one 1. renew matrix per step: inner zeros, outer inherit. update inner by forward dp
799. Champagne Tower | init triangular 0s, L[0][0]=poured. triangular update by excess: if L[i][j]>1: excess=L[i][j]-1, L[i][j]=1 -> if i+1<len(L): L[i+1][j], L[i+1][j+1] = L[i+1][j]+excess/2., L[i+1][j+1]+excess/2.
1143. Longest Common Subsequence | L[i][j] = L[i-1][j-1] + 1 if text1[i-1]==text2[j-1] else max(L[i][j-1],L[i-1][j])

Graph Traversal or Unweighted shorted path (DFS-recursion/BFS-queue + visitS)
133. Clone Graph | node2dict, dict2node
399. Evaluate Division | dfs f(start, end, visit), use graph as memorization, return find, G[start,end]. visitS should be reinitialized per query, don't add unfind query so G can keep disconnection.
433. Minimum Genetic Mutation | BFS, visitS. can add memory
542. 01 Matrix | queue in (i,j,depth), one queue multi-source BFS start from 0s (put into Q) update 1s (set -1 as unvisited initially)
1743. Restore the Array From Adjacent Pairs | create graph, find indegree==1, traversal. delete instead of visitS

Graph - Topological sort (Kahn's: init inDegL=[inDeg,...], leaves=[inDeg==0 node, ...])
207. Course Schedule    | DFS, G is constant, while leaves
210. Course Schedule II | DFS, G is constant, while leaves
310. Minimum Height Trees | BFS, G is varied, while len(G)>2: init leaves

Graph - Spanning tree (Prim: init H, L, S)
-
1584. Min Cost to Connect All Points | Prim. Init graph. Heap(dist2mst,node), L=[dist,...], visitS, ans. while heap: pop, visitS.add, for nei in G[x]: if shorter update and push. Very similar to 743. O((v+e)logv)
  + Kruskal: Union find, sort edges reversely, pop, merge 2 point if union. O(eloge). same complexity.

Graph - Weighted shortest path (Dijkstra: init H, L, S)
-
743. Network Delay Time | Dijkstra. Init graph. Heap(dist2node,node), L=[dist, ...], visitS. while heap: pop, visitS.add, for nei in G[x]: if shorter: update and push. (No relaxation, Heap O((v+e)log(v)), Queue can get correct answer but O(v^2))
   + Bellman-Ford: for _ in range(1,n): for l,r,w in times: L[r] = min(L[r], L[l]+w). O(ve)
787. Cheapest Flights Within K Stops | Dijkstra but MUST use Queue instead of Heap since relaxation cause error for heap, NO visitS. Q(accum,node,depth), L=[dist, ...]. if shorter: update and push
1334. Find the City With the Smallest Number of Neighbors at a Threshold Distance | Floyd-WarShall O(v^3). for mid for vi for vj: relaxation. cannot modify the loop order. Becuase previous optimization results may not hold if mid changes.
1514. Path with Maximum Probability | same as 743 Heap(-prob,node)
1631. Path With Minimum Effort | same as 743. Heap(accum_delta,node)

Hash 0
1. Two Sum
15. 3Sum
18. 4Sum
49. Group Anagrams
141. Linked List Cycle
142. Linked List Cycle II
160. Intersection of Two Linked Lists
187. Repeated DNA Sequences
202. Happy Number
205. Isomorphic Strings
217. Contains Duplicate
219. Contains Duplicate II
260. Single Number III
290. Word Pattern | same as 205
299. Bulls and Cows | same as 205 and 290
349. Intersection of Two Arrays
350. Intersection of Two Arrays II
383. Ransom Note
387. First Unique Character in a String
389. Find the Difference
398. Random Pick Index
423. Reconstruct Original Digits from English | order: 0246813579
500. Keyboard Row
519. Random Flip Matrix | while 1: pick not selected
706. Design HashMap
859. Buddy Strings
1347. Minimum Number of Steps to Make Two Strings Anagram | sum((Counter-Counter).values())
1657. Determine if Two Strings Are Close | set(word1)==set(word2) and sorted(Counter(word1).values()) == sorted(Counter(word2).values())
2352. Equal Row and Column Pairs | Counter, sum(D[key]*E[key] for key in D.keys()&E.keys()
2610. Convert an Array Into a 2D Array With Conditions

Hash
3. Longest Substring Without Repeating Character | if s[i] not in D or accum<D[s[i]]: accum+=1, else accum=i-D[s[i]]
36. Valid Sudoku | check (i,ele), (ele,j), (i//3,j//3,ele) in S
128. Longest Consecutive Sequence | S=set(L); while S: while x-l in S, while x+r in S
380. Insert Delete GetRandom O(1) | dict+list, remove do nothing for list, remove from list while getRandom if needed
438. Find All Anagrams in a String | sliding window Counter
447. Number of Boomerangs | for x1,y1 in points: defaultdict for x2,y2 in points: D[dist]+=1 ans += sum( cnt*(cnt-1) for dist,cnt in D.items() if cnt>1 )
454. 4Sum II | O(n^2) Counter collect -x-y, O(n^2) find +x+y
467. Unique Substrings in Wraparound String | D={c:1 for c in s}, cont=1. D substr end with char -> numbers. for i in range(1,len(s)): cont = cont+1 if (ord(s[i])-ord(s[i-1]))%26==1 else 1. D[s[i]]=max(D[s[i]],cont)
532. K-diff Pairs in an Array | S, ans = set(nums), 0. for x in sorted(list(S)): if x+k in S: ans+=1
554. Brick Wall | spaces=Counter(). for row in wall: for x in accumulate(row[-1]): spaces[x]+=1
1218. Longest Arithmetic Subsequence of Given Difference | D[x] = 1 if x-difference not in D else D[x-difference]+1
1282. Group the People Given the Group Size They Belong To | D, ans = defaultdict(lambda :[]), []. for i,size in enumerate(groupSizes): D[size].append(i) if len(D[size])==size: ans.append(D[size]). D[size]=[]
1647. Minimum Deletions to Make Character Frequencies Unique | Counter, ans, freqS
1814. Count Nice Pairs in an Array | remember to move terms first
1887. Reduction Operations to Make the Array Elements Equal | Counter -> sort -> sum
1930. Unique Length-3 Palindromic Subsequences | for c in set(s): l=s.find(c), r=s.rfind(c) -> ans += len(set(s[l+1:r]))
2133. Check if Every Row and Column Contains All Numbers | same as 36.
2225. Find Players With Zero or One Losses | defaultdict count lose times. loseD[win]+=0, loseD[win]+=1

Heap0
23*. Merge k Sorted Lists
1962. Remove Stones to Minimize the Total

Heap
355. Design Twitter | {userId:follower set}, {userId: queue(time,tweetID)}, heapq.heapify((time,posts)) while calling getNewsFeed
373. Find K Pairs with Smallest Sums | heap(sumv,i,j), inH(i,j)
767. Reorganize String | heap(-timees,char). while len(H)>=2.
2462. Total Cost to Hire K Workers | heap(cost[i] or cost[-1-i],'l'or'r') with l, r pointers

@
138. Copy List with Random Pointer | ll. D[id(p)]=idx, L=[Node(p.val)]

Iteration 0
54. Spiral Matrix
59. Spiral Matrix II
61. Rotate List | ll.
73. Set Matrix Zeroes | O(1) space: let 1 change to 0.5
1220. Count Vowels Permutation
228. Summary Ranges | general splitting
238. Product of Array Except Self | math.prod(list)
289. Game of Life | binary_encode=(next)(prev)
382. Linked List Random Node | ll.
384. Shuffle an Array
392. Is Subsequence
443. String Compression | general splitting
453. Minimum Moves to Equal Array Elements
455. Assign Cookies
459. Repeated Substring Pattern
461. Hamming Distance
539. Minimum Time Difference | ans=min(ans,abs(diff),1440-abs(diff))
725. Split Linked List in Parts | ll.
1351. Count Negative Numbers in a Sorted Matrix
1441. Build an Array With Stack Operations
1582. Special Positions in a Binary Matrix
1877. Minimize Maximum Pair Sum in Array | sort, max of head-tail pair
2279. Maximum Bags With Full Capacity of Rocks

Iteration i with accum
53. Maximum Subarray | ans=L[0], acc=0. for x in L: acc=max(acc+x,x), ans=max(ans,acc)
121. Best Time to Buy and Sell Stock | ans=0, lowest=L[0]. for x in L: lowest=min(lowest,x), ans=max(ans, x-lowest)
134. Gas Station | ans=0, acc=0. for i in range(len(gas)): acc+=gas[i]-cost[i], if acc<0: ans=i+1, acc=0
152. Maximum Product Subarray | ans=nums[0], minv=1, maxv=1. for x in L: minv=min(x,minv*x,maxv*x), maxv=max(x,minv*x,maxv*x), ans=max(ans,maxv)
331. Verify Preorder Serialization of a Binary Tree | slot=1 if # slot-=1 else slot+=1, slot must >0 during iteration and =0 finally
376. Wiggle Subsequence | similar to 152. up, down = 1, 1 (first wiggle is up or down). for i in range(1,len(nums)): if nums[i]>nums[i-1]: up = down+1 elif nums[i]<nums[i-1]: down = up+1. return max(up, down)
334. Increasing Triplet Subsequence | min1, min2 = float('inf'), float('inf'). for x in nums: if x<=min1: min1 = x elif x<=min2: min2 = x else: return True
1759. Count Number of Homogenous Substrings | ans=1, cont=1. for x in L[1:]: cont=cont+1 if s[i]==s[i-1] else 1. ans+=cont (ans+=cont due to arithmetic sum, similar to 467)

Iteration start i
26. Remove Duplicates from Sorted Array
80. Remove Duplicates from Sorted Array II | same as 26 but add dup=1or2
413. Arithmetic Slices | similar to 674 but ans+=i-start-1
674. Longest Continuous Increasing Subsequence | start, ans = 0, 1 for if else (compare to 300 is continuous)

Iteration
5. Longest Palindromic Substring
31. Next Permutation | e.g. 246531. from right to left: i at peak. if i>0: from right to left: L[j]>L[i-1], swap(L[i-1],L[j]). swap all ele >=i
48. Rotate Image
396. Rotate Function | init ans=current, sumv. current += sumv - nums[-1-i]*len(nums). consider rotate difference only
556. Next Greater Element III | same as 31
93. Restore IP Addresses | cut i,j,k four pieces, each piece: non-empty, <255, no leading 0
122. Best Time to Buy and Sell Stock II | ans += max(0,num[i]-num[i-1])
165. Compare Version Numbers | split each and fill zeros to align length
168. Excel Sheet Column Title  | L=[]. while x>0: x-=1, r=x%26, L.append(chr(r+ord('A'))), x=(x-r)//26
171. Excel Sheet Column Number | for i,c in enumerate(s[::-1]): ans += (ord(c)-ord("A")+1) * 26**i
172. Factorial Trailing Zeroes | ans, factor = 0, 5. while factor<=n: ans+=n//factor, factor*=5
179. Largest Number | L=[str(x) for x in L]. L.sort(key=cmp_to_key(lambda x,y:int(x+y)-int(y+x)), reverse=True)
201. Bitwise AND of Numbers Range | a=bin(l)[2:], b=bin(r)[2:]. if len(a)!=len(b): return 0. same_leading_bits = next((i for i in range(len(a)) if a[i]!=b[i]), len(a))
283. Move Zeroes | zeros, saves = nums.count(0), 0. while saves<len(nums)-zeros: find save_idx by next, swap, saves+=1 (saves mean found non-zero elements)
328. Odd Even Linked List | ll. interleaving points
386. Lexicographical Numbers | sort in str or key=cmp_to_key(lex). def lex(x,y): compare if len(x)==len(y) else fill samllest at the shorter of the end and compare (different from 179)
405. Convert a Number to Hexadecimal | find -x of binary: get +x binary -> reverse bits -> +1 || get +x+1 binary -> reverse bits
406. Queue Reconstruction by Height | sort by (-p[0],p[1]). then L.insert(p[1],p). (if all p[1]=0, tall first; if all p[0]=h, small p[1] first)
442. Find All Duplicates in an Array | Use negative sign to save visited. ans = []. for i in range(len(L)): store_idx = abs(nums[i])-1 if nums[store_idx]<0: ans.append(abs(nums[i])). nums[store_idx]*=-1
470. Implement Rand10() Using Rand7() | 7-carry while x>=40
524. Longest Word in Dictionary through Deleting | find longest issubsequence
746. Min Cost Climbing Stairs | a,b=cost[0],cost[1]. for i in range(2,len(L)): c=cost[i]+min(a,b), a=b, b=c. return min(a,b)
1232. Check If It Is a Straight Line | use determinants instead of slopes
1291. Sequential Digits | dl, dh = int(log(low)/log(10))+1, int(log(high)/log(10))+1. L, x, diff = [], int("".join( str(i) for i in range(1,1+dl) )), int("1"*dl). for di in range(dl, dh+1): for j in range(10-di):
1503. Last Moment Before All Ants Fall Out of a Plank | max( max(left) if left else 0, n-min(right) if right else 0 ). (don't trace ant-i but switch id while collision)
1535. Find the Winner of an Array Game | current_winner(cwr), consecutive_wins(cws) = L[0], 0. for i in range(1,len(L)): if L[i]>cwr: cwr, cws = L[i], 1 else cws+=1 if cws==k: break
1980. Find Unique Binary String | return "".join( str(int(L[i][i]=="0")) for i in range(len(L)) ) # diagnoal algorithm
149*. Max Points on a Line | use determinant, O(n^3)

Iteration - Arithmetic sort
268. Missing Number | while i<len(L): if L[i]<len(L) and L[i]!=L[L[i]]: L[L[i]], L[i] = L[i], L[L[i]] else i+=1 # CANNOT REVERSE
287. Find the Duplicate Number
448. Find All Numbers Disappeared in an Array
645. Set Mismatch
41*. First Missing Positive

Iteration - Bit operations
136. Single Number | return ^:all
137. Single Number II | tenary, add_mod3:all
268. Missing Number | allxor = 0 for i in range(1,len(nums)+1): allxor ^= i. for x in nums: allxor ^= x. return allxor
477. Total Hamming Distance | ans=0. for i in range(32): b=sum(x>>&i for x in nums). ans+=b*(len(nums)-b). return ans
    # consider n numbers 1 bit only # b 0s, n-b 1s # total dist = b*(n-b) # consider bipartite only
    # check whether the i-th bit of a number x is 1: "x>>i&1" # shift is always prior than and
2433. Find The Original Array of Prefix Xor | ^ has association

@

Iteration - FSM
309. Best Time to Buy and Sell Stock with Cooldown | buy, sel, col = 0, -p, -p
714. Best Time to Buy and Sell Stock with Transaction Fee | buy, sel = 0, -p
--
123*. Best Time to Buy and Sell Stock III | sel1, buy2, sel2, ans = -p, 0, -float('inf'), -float('inf)

Iteration - Left-Right
11. Container With Most Water
16. 3Sum Closest | sort + binary search
33. Search in Rotated Sorted Array | judge pivot -> judge left or right
34. Find First and Last Position of Element in Sorted Array
35. Search Insert Position
74. Search a 2D Matrix
81. Search in Rotated Sorted Array II | based on 33. add if nums[l]==nums[m]==nums[r]: l, r = l+1, r-1
153. Find Minimum in Rotated Sorted Array | min(nums[l],nums[m],nums[r]), special case nums[m] is min and also ans (check neighbors circularly)
162. Find Peak Element | max(L[m-1], L[m], L[m+1])
167. Two Sum II - Input Array Is Sorted
240. Search a 2D Matrix II
274. H-Index | reverse n, n-1, ..., 2, 1. L[-1-i]<1+i
275. H-Index II
278. First Bad Version
374. Guess Number Higher or Lower
436. Find Right Interval
462. Minimum Moves to Equal Array Elements II | similar to 162. Or sort and use median as level.
475. Heaters | search len(houses) times
540. Single Element in a Sorted Array | while 1: if l==r or L[m-1]!=L[m]!=L[m+1]: return L[m] (always valid index since l-r=odd), consider c0 to c4...
-
1011. Capacity To Ship Packages Within D Days | def isValid(capacity), binary search [max(weights),sum(weights)]
1201. Ugly Number III | gcd, binary search find m -> while not multiple: m-=1
2187. Minimum Time to Complete Trips | binary search + linear search
--
42*. Trapping Rain Water | find maxidx, collect left with lmax, collect right with rmax

Iteration - Monte Carlo
169. Majority Element
229. Majority Element II

Iteration - Non-overlapping interval
56. Merge Intervals | sort and merge
435. Non-overlapping Intervals | sort by end. for i in range(L): if non-overlap with prev: prev=i else ans+=1
452. Minimum Number of Arrows to Burst Balloons | Like 56. But intersection instead of union.
-
*. Maximum overlap interval | sort (start,1) and (end,-1). Accumulation count and find max.

Iteration - sliding window
1838. Frequency of the Most Frequent Element

Iteration - subarray sum all: hash
523. Continuous Subarray Sum | D={0:-1} initially (sumv%k->first_occur_idx). for x: sumv=(sumv+x)%k. if sumv in D and index_diff >1, if sumv not in D: D[sumv]=i
525. Contiguous Array | Similar to 523
560. Subarray Sum Equals K | D={0:1} initially (sumv->counts). for x: sumv=sumv+x, if sumv-k in D: sumv+=D[sumv-k], D[sumv]+=1

Iteration - subarry sum pos: caterpillar 
209. Minimum Size Subarray Sum | extend front and cut back (similar to 187)
424. Longest Repeating Character Replacement
--
1658. Minimum Operations to Reduce X to Zero | while accum>=target and start<=i:, return ans if maxLen>0 or target==0 else -1

Iteration - Sort
75. Sort Colors | Dutch Flag Algorithm. l=m=0, r=len(L)-1. while m<=r: if nums[m]==0: swap(L[l],[m]), l+=1, m+=1 elif nums[m]==1: m+=1, else: swap(L[m],L[r]), r-=1
    + while m<=r, m+=1 only if L[m]=0or1
215. Kth Largest Element in an Array | Quick select. if l+1==r elif l+1<r. random pivot + Dutch flag. call 0~1 side
324. Wiggle Sort II | 1,3,5,...,0,2,4,...
-
905. Sort Array By Parity | Dutch Flag Algorithm
912. Sort an Array | Quick sort. if l+1==r elif l+1<r. random pivot + Dutch flag. call 2 sides

Math
357. Count Numbers with Unique Digits
441. Arranging Coins
492. Construct the Rectangle | sqrt(x), while not divisible: x-=1
-
1802. Maximum Value at a Given Index in a Bounded Array | reach l/r -> reach r/l -> go up
--
65*. Valid Number | points<=1; +/-<=1+bool(has e/E); letters=0; e,E<=1 -> has or not e/E, digit>=1 and .index(+/-)>=0
1359. Count All Valid Pickup and Delivery Options | f(i)=f(i-1)*i*(2i-1)%m

Naive
7. Reverse Integer
8. String to Integer (atoi)
9. Palindrome Number
12. Integer to Roman
13. Roman to Integer
14. Longest Common Prefix
19. Remove Nth Node From End of List
43. Multiply Strings
50. Pow(x, n)
58. Length of Last Word
66. Plus One
67. Add Binary
69. Sqrt(x)
70. Climbing Stairs
88. Merge Sorted Array
125. Valid Palindrome
143. Reorder List
147. Insertion Sort List
148. Sort List
151. Reverse Words in a String
189. Rotate Array | reverse 3 times O(1) space
190. Reverse Bits
191. Number of 1 Bits
231. Power of Two | bin
237. Delete Node in a Linked List
242. Valid Anagram
258. Add Digits
263. Ugly Number
284. Peeking Iterator
292. Nim Game
318. Maximum Product of Word Lengths
319. Bulb Switcher
342. Power of Four | bin
344. Reverse String
345. Reverse Vowels of a String
347. Top K Frequent Elements
367. Valid Perfect Square
409. Longest Palindrome
412. Fizz Buzz
414. Third Maximum Number
415. Add Strings
451. Sort Characters By Frequency
463. Island Perimeter
468. Validate IP Address
476. Number Complement
478. Generate Random Point in a Circle | parameter r=sqrt(rand)*self.r
485. Max Consecutive Ones
495. Teemo Attacking
497. Random Point in Non-overlapping Rectangles | random.choices(L, weights, k=1)[0]
506. Relative Ranks
507. Perfect Number
509. Fibonacci Number
520. Detect Capital
528. Random Pick with Weight
537. Complex Number Multiplication
551. Student Attendance Record I
-
744. Find Smallest Letter Greater Than Target
1160. Find Words That Can Be Formed by Characters
1207. Unique Number of Occurrences
1266. Minimum Time Visiting All Points
1318. Minimum Flips to Make a OR b Equal to c
1436. Destination City
1464. Maximum Product of Two Elements in an Array
1502. Can Make Arithmetic Progression From Sequence
1572. Matrix Diagonal Sum
1662. Check If Two String Arrays are Equivalent
1688. Count of Matches in Tournament
1704. Determine if String Halves Are Alike
1845. Seat Reservation Manager | Heap
1903. Largest Odd Number in String
1921. Eliminate Maximum Number of Monsters | Heap
2125. Number of Laser Beams in a Bank
2148. Count Elements With Strictly Smaller and Greater Elements
2264. Largest 3-Same-Digit Number in String
2482. Difference Between Ones and Zeros in Row and Column | record row1s & col1s
2483. Minimum Penalty for a Shop
2870. Minimum Number of Operations to Make Array Empty

Queue
498. Diagonal Traverse | BFS add down when i=0 + add right always, use i+j to judge even or odd
--
127*. Word Ladder
239*. Sliding Window Maximum | (val,idx) in queue, length is not const, always desc sorted
1424. Diagonal Traverse II | simpler than 498.

Recursion
779. K-th Symbol in Grammar | left remains, right flips -> count how many right (flips)
124*. Binary Tree Maximum Path Sum | like 53., ans=max(ans,T.val,T.val+l,T.val+r,T.val+l+r), return max(T.val, T.val+l, T.val+r)

Recursion Arg Bottom-up <1/4>
17. Letter Combinations of a Phone Number
46. Permutations
47. Permutations II
22. Generate Parentheses | f(L=['('],l=1,r=0)
78. Subsets | f(i=0, L=[[]]) concatenate add nums[i] or not add
90. Subsets II
110. Balanced Binary Tree
365. Water and Jug Problem | DFS f(total), 4 dirs: total+j1, total+j2, total-j1, total-j2
-
880. Decoded String at Index | f(k=k-1) cnt=0 for c in s: if c.isalpha()... else
--
60*. Permutation Sequence

Recursion Arg Top-Down <2/4>
2. Add Two Numbers
445. Add Two Numbers II | reverse list and same as 2.
21. Merge Two Sorted Lists
24. Swap Nodes in Pairs
57. Insert Interval
82. Remove Duplicates from Sorted List II
83. Remove Duplicates from Sorted List
89. Gray Code
92. Reverse Linked List II
94. Binary Tree Inorder Traversal
95. Unique Binary Search Trees II | f(L=list(range(1,1+n)))
96. Unique Binary Search Trees
98. Validate Binary Search Tree | LDR ordered or not
99. Recover Binary Search Tree
100. Same Tree
101. Symmetric Tree
104. Maximum Depth of Binary Tree
105. Construct Binary Tree from Inorder and Preorder Traversal
106. Construct Binary Tree from Inorder and Postorder Traversal
108. Convert Sorted Array to Binary Search Tree
109. Convert Sorted List to Binary Search Tree
111. Minimum Depth of Binary Tree
112. Path Sum
129. Sum Root to Leaf Numbers
144. Binary Tree Preorder Traversal
145. Binary Tree Postorder Traversal
173. Binary Search Tree Iterator
203. Remove Linked List Elements
206. Reverse Linked List | upper left & down right r
222. Count Complete Tree Nodes
226. Invert Binary Tree
230. Kth Smallest Element in a BST
234. Palindrome Linked List
241. Different Ways to Add Parentheses | similar to 95.
306. Additive Number | cut 3 parts sequentially, each do recursive call
337. House Robber III | add memory
343. Integer Break | initial n<4 return. f(n) recursion cut 2 or 3 where f(1) and f(2) and f(3) are different from the initial. add memory
394. Decode String | find ] -> rfind ( -> flatten -> recusion call
397. Integer Replacement | add memory
427. Construct Quad Tree | f(i=0,j=0,ref=len(grid)//2) -> (Node, val if all same else -1); ref==0 or allsame is leaf otherwise non-leaf
449. Serialize and Deserialize BST
450. Delete Node in a BST | if not left: elif not right: else find rightest node in left subtree -> copy its value and delete such node
486. Predict the Winner | add memory, f(l,r) -> score
491. Non-decreasing Subsequences | f(tup) -> set[non-desc-tuple] with each ele len>=1, filter finally
501. Find Mode in Binary Search Tree
518. Coin Change II | f(start, target) and memorization
529. Minesweeper
530. Minimum Absolute Difference in BST | f(T.left) -> self.ans -> self.prev -> f(T.right)
543. Diameter of Binary Tree | insert updating ans in treeheight recursion function
-
652. Find Duplicate Subtrees | D:tuple(*dlr,-2,*ldr)->int; f(T=root)->DLR tuple(int), LDR tuple(int); if not T: return (-1,), (-1,)
894. All Possible Full Binary Trees | similar to 95.
912. Sort an Array
--
25*. Reverse Nodes in k-Group | split all sublists -> call 206. -> connect

Recursion Share Bottom-up <3/4>
39. Combination Sum | f(path={},start=0,target=target), similar than 40. for t in range(targer//can+1)
40. Combination Sum II | collections.counter, f(path=[],start=0,target=target), for t in range(times+1)
77. Combinations | f(path=[], start=0) simpler than 40. skip L[start] or add L[start]
79. Word Search | retrievable f(position,match,visitS) # retrievable = backtracking
131. Palindrome Partitioning | f(tuple) for loop check if can odd or even merge + add memory
216. Combination Sum III | f(path=[],start=1,sumv=n), similar as 77.
404. Sum of Left Leaves | f(T,isLeft)
416. Partition Equal Subset Sum | Similar to 40. no path so add memorization.
457. Circular Array Loop | f(i,pathS,isPos) while not self.ans and nodeS: f(i,set(),isPos)
473. Matchsticks to Square | Similar to 40. + 416.
494. Target Sum | f(methods={0:1}, start=0), for i in range(times+1) for key,val in methods
-
2305. Fair Distribution of Cookies | O(n^k) retreivable
--
30*. Substring with Concatenation of All Words
37*. Sudoku Solver | use L but not S to prevent unorder traversal, just pop and try 1-9, retrievable + must copy L since has L.pop  
51*. N-Queens | retrievable + no need copy B since B is invariant
52*. N-Queens II
140*. Word Break II | similar as 40

Recursion Share Top-Down <4/4>
102. Binary Tree Level Order Traversal
103. Binary Tree Zigzag Level Order Traversal
107. Binary Tree Level Order Traversal II
113. Path Sum II
114. Flatten Binary Tree to Linked List
116. Populating Next Right Pointers in Each Node
117. Populating Next Right Pointers in Each Node II
130. Surrounded Regions
199. Binary Tree Right Side View
200. Number of Islands
235. Lowest Common Ancestor of a Binary Search Tree
236. Lowest Common Ancestor of a Binary Tree
  + Naive recursion (good at balanced)
  + Change to Range min query (good at general): euler path, depth path, D: T.val->"first occurence index in euler path". Build segment tree each node (T.val,index) then query(D[p.val],D[q.val])
257. Binary Tree Paths
341. Flatten Nested List Iterator
395. Longest Substring with At Least K Repeating Characters | for c in set(s): Use s.count(c)<k as splitting seperator
429. N-ary Tree Level Order Traversal
430. Flatten a Multilevel Doubly Linked List
464. Can I Win | if sum(choices)<total: return False (before start recursion), recursion condition: false initially, for i in range(len(L)): if not f: true and break
508. Most Frequent Subtree Sum
513. Find Bottom Left Tree Value
515. Find Largest Value in Each Tree Row
538. Convert BST to Greater Tree
547. Number of Provinces
--
606. Construct String from Binary Tree
802. Find Eventual Safe States | args+share. recursive call if n not in ans, if isSafe and n not in visit 
863. All Nodes Distance K in Binary Tree | Tree to Graph + BFS
1026. Maximum Difference Between Node and Ancestor
1239. Maximum Length of a Concatenated String with Unique Characters | O(2^n)
1361. Validate Binary Tree Nodes
1457. Pseudo-Palindromic Paths in a Binary Tree
2385. Amount of Time for Binary Tree to Be Infected | Tree to Graph by add parent link + BFS

SortedContainers
2353. Design a Food Rating System | functools.cmp_to_key, Dict[cusine] -> SortedList(rate,food) & Dict[food] -> [cusine,rate] 

Stack
20. Valid Parentheses | dict + lr matching
71. Simplify Path
150. Evaluate Reverse Polish Notation | complete version 227. 224.
155. Min Stack | a stack store (val,min)
227. Basic Calculator II | totally 3 steps
225. Implement Stack using Queues
232. Implement Queue using Stacks
316. Remove Duplicate Letters | lastIdx, stack, stackS. stack is the final answer, so pop if top is larger and top will be scanned later.
402. Remove K Digits | while stack and k and stack[-1]>x. Exceptions: leading 0s, k>0, empty str
456. 132 Pattern | stack, secondmax = [], float('-inf'). stack[-1] is always max; iterate reversely.
496. Next Greater Element I
503. Next Greater Element II | similar to 739 but iterate 2n times
-
739. Daily Temperatures | stack=[(ith_day_temp, ith_day)]. pop and write ans[i]=i-ith_day while stack and hotter than top
844. Backspace String Compare
907. Sum of Subarray Minimums | pop while smaller, dp[stack[-1]] + arr[i]*(i-stack[-1]) if stack else arr[i]*(i+1) [difficult]
1081. Smallest Subsequence of Distinct Characters | same as 316
--
224*. Basic Calculator

Trie
208. Implement Trie (Prefix Tree) | Dict, the end of inserting: p["*"]="". e.g. insert apple, insert app, search app
211. Design Add and Search Words Data Structure | Trie + recursion

----------

Special
28. Find the Index of the First Occurrence in a String | lcps + KMP
146. LRU Cache | dict+double linked list OR OrderedDict with O.popitem(last=False)
223. Rectangle Area | max(0,min()-max())
307. Range Sum Query - Mutable | Segment tree. (T,T.l,T.r)=(sum(L),sum(left),sum(right)). same inputs of 3 methods f(i=0,l=0,r=len(L)-1)
--
*1483. Kth Ancestor of a Tree Node | Binary lifting. self.D[i][j]=i-th node's 2**j ancestor. Column major filling since it may not have ancestor before filling parent. To fill self.D[i][j-1], parent=self.D[i][j-1] 

Bad
6. Zigzag Conversion
27. Remove Element
29. Divide Two Integers
38. Count and Say | like general spliting
166. Fraction to Recurring Decimal
371. Sum of Two Integers
372. Super Pow
400. Nth Digit
481. Magical String
521. Longest Uncommon Subsequence I
522. Longest Uncommon Subsequence II
535. Encode and Decode TinyURL
541. Reverse String II
553. Optimal Division

Unknown
86. Partition List
