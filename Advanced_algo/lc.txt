Hash
1. Two Sum
15. 3Sum
18. 4Sum
36. Valid Sudoku | check (i,ele), (ele,j), (i,j,ele) in S
49. Group Anagrams
128. Longest Consecutive Sequence | S=set(L); for x in L: if x-1 not in S:...
141. Linked List Cycle
142. Linked List Cycle II
160. Intersection of Two Linked Lists
187. Repeated DNA Sequences
202. Happy Number
205. Isomorphic Strings
217. Contains Duplicate
219. Contains Duplicate II
229. Majority Element II
260. Single Number III
287. Find the Duplicate Number | Floyd's Tortoise and Hare?
290. Word Pattern
299. Bulls and Cows | same as 205 and 290
-
2133. Check if Every Row and Column Contains All Numbers | same as 36.
2352. Equal Row and Column Pairs | set(D.keys()) & set(E.keys())

DP Backward
3. Longest Substring Without Repeating Character | L.append( i-D[s[i]] if s[i] in D and i-L[-1]<=D[s[i]] else L[-1]+1 ) |e.g. abba
45. Jump Game II | Transform array to "farthest index can go"
55. Jump Game | Transform array to "farthest index can go", for i in range(1,len(nums)-1), return False if i<=nums[i]
62. Unique Paths
63. Unique Paths II
64. Minimum Path Sum
70. Climbing Stairs
91. Decode Ways | 00, 01~09/27~, 10/20, 11~19/21~26
97. Interleaving String | T[i][j] = (T[i-1][j] and s1[i-1]==s3[i+j-1]) or (T[i][j-1] and s2[j-1]==s3[i+j-1])
118. Pascal's Triangle
119. Pascal's Triangle II
120. Triangle
198. House Robber    | initial 3, L.append( max(L[-3],L[-2])+nums[i] ), return max(L[-1],L[-2])
213. House Robber II | initial 4, exclude first L / exclide last M, return max(L[-1],M[-1])
221. Maximal Square  | M[i][j] = M[i][j] * min(ul,l,u)+1
264. Ugly Number II | Create array store ugly numbers sequentially. Use "2,3,5 index pointers" update candidates.
Any ugly number must depends are previous ugly numbers (3 candidates) so the candidates updated by next least larger. Both co-factor should be updated as well.
279. Perfect Squares | L = [0,1]; for i in range(2,n+1): L.append( min( L[i-x**2]+1 for x in squares if i-x**2 >=0 ) )
300. Longest Increasing Subsequence | similar to 279
303. Range Sum Query - Immutable
304. Range Sum Query 2D - Immutable
313. Super Ugly Number | same as 264

DP Forward
39. Combination Sum | Knapsack
40. Combination Sum II
139. Word Break | for i for word: write True if match
204. Count Primes | Sieve of Eratosthenes: L=[F,F]+[T]*(n-2); for i in range(2,int(n**0.5)+1): if L[i]: for j in range(i*i, n, i): L[j]=F
-
322. coin change

Iteration
5. Longest Palindromic Substring
31. Next Permutation | e.g. 246*5_31 | * at peak _ at > *-1 -> swap(*-1,_) -> swap all ele after * inclusively
38. Count and Say | like general spliting
48. Rotate Image
53. Maximum Subarray | ans=num[0], acc=nums[0] -> acc=max(acc+x,x) -> ans=max(ans,acc)
54. Spiral Matrix
59. Spiral Matrix II
61. Rotate List
73. Set Matrix Zeroes | O(1) space: let 1 change to not 0 but 0.5 
75. Sort Colors
80. Remove Duplicates from Sorted Array II
93. Restore IP Addresses | cut i,j,k four pieces, bool and <255 and no leading 0
121. Best Time to Buy and Sell Stock | like 53. ans, lowest
122. Best Time to Buy and Sell Stock II | ans += max(0,num[i]-num[i-1])
133. Clone Graph | node2dict2node
134. Gas Station | (very similar to Maximum Subarray) ans=0 tmpSum=0, ans+=1 if tmpSum<0
138. Copy List with Random Pointer
152. Maximum Product Subarray | update minv=min(x,minv*x,maxv*x), maxv=max(x,minv*x,maxv*x), ans=max(ans,maxv)
165. Compare Version Numbers
168. Excel Sheet Column Title  | while num>0: num-=1; r=num%26; append; num=(num-r)//26
169. Majority Element | Boyer-290. Word PatternMoore Voting Algorithm: if count==0 change candidate; count=1 if x==candidate else -1
171. Excel Sheet Column Number | for i,c in enumerate(s[::-1]): ans += (ord(c)-ord("A")+1) * 26**i
172. Factorial Trailing Zeroes | c+=int(n/5**(i+1))
179. Largest Number
201. Bitwise AND of Numbers Range | must same bit, while align with 1 from left to right
207. Course Schedule    | Kahn's algorithm, while leaves (DFS)
209. Minimum Size Subarray Sum | extend front and cut back (similar to 187)
210. Course Schedule II | Kahn's algorithm, while leaves (DFS)
228. Summary Ranges
238. Product of Array Except Self
289. Game of Life
310. Minimum Height Trees | Kahn's algorithm, while len(inD)>2 (BFS)
-
443. String Compression | split strategy
1232. Check If It Is a Straight Line | use determinants instead of slopes
1351. Count Negative Numbers in a Sorted Matrix | j stands at rightest >=0 for each row
1962. Remove Stones to Minimize the Total | Max-heap
2279. Maximum Bags With Full Capacity of Rocks
--
23*. Merge k Sorted Lists | heap
41*. First Missing Positive | arithmetic sequence sort, consider infinite swap, consider nums[0] might let ans+1
124*. Binary Tree Maximum Path Sum | like 53., ans=max(ans,T.val,T.val+l,T.val+r,T.val+l+r), return max(T.val, T.val+l, T.val+r)
135*. Candy | collect all local min as S, expand lr + remove from S until not greater
149*. Max Points on a Line | use determinant, O(n^3)

Iteration - Bit operations
136. Single Number
137. Single Number II | tenary, add-mod3
260. Single Number III | xor all to get ans1^ans2 -> pick 1 difference bit to divide all into 2 groups -> xor group individually 
268. Missing Number | xor 1~n then xor all since a^a=0 always

Iteration - FSM
309. Best Time to Buy and Sell Stock with Cooldown | buy, sel, col = 0, -p, -p
714. Best Time to Buy and Sell Stock with Transaction Fee | buy, sel = 0, -p
--
123*. Best Time to Buy and Sell Stock III | sel1, buy2, sel2, ans = -p, 0, -float('inf'), -float('inf)

Iteration - Left-Right
11. Container With Most Water
16. 3Sum Closest | sort + binary search
33. Search in Rotated Sorted Array | judge pivot -> judge left or right
34. Find First and Last Position of Element in Sorted Array
35. Search Insert Position
74. Search a 2D Matrix
81. Search in Rotated Sorted Array II | based on 33. add if nums[l]==nums[m]==nums[r]: l, r = l+1, r-1
153. Find Minimum in Rotated Sorted Array | consider min(nums[l],nums[m],nums[r])==nums[l] so pivot can be determined; wary [2,1]
167. Two Sum II - Input Array Is Sorted
240. Search a 2D Matrix II
278. First Bad Version
-
540. Single Element in a Sorted Array | if m%2 then if L[m-1]==L[m]
1011. Capacity To Ship Packages Within D Days | def isValid(capacity), binary search [max(weights),sum(weights)]
1201. Ugly Number III | gcd, binary search find m -> while not multiple: m-=1
2187. Minimum Time to Complete Trips | binary search + linear search
--
42*. Trapping Rain Water | find maxidx, collect left with lmax, collect right with rmax

Math
65. Valid Number | points<=1; +/-<=1+bool(has e/E); letters=0; e,E<=1 -> has or not e/E, digit>=1 and .index(+/-)>=0
1802. Maximum Value at a Given Index in a Bounded Array | reach l/r -> reach r/l -> go up

Mix
131. Palindrome Partitioning | f(tuple) for loop check if can odd or even merge

Naive
7. Reverse Integer
8. String to Integer (atoi)
9. Palindrome Number
12. Integer to Roman
13. Roman to Integer
14. Longest Common Prefix
19. Remove Nth Node From End of List
43. Multiply Strings
50. Pow(x, n)
58. Length of Last Word
66. Plus One
67. Add Binary
69. Sqrt(x)
88. Merge Sorted Array
125. Valid Palindrome
143. Reorder List
147. Insertion Sort List
148. Sort List
151. Reverse Words in a String
189. Rotate Array
190. Reverse Bits
191. Number of 1 Bits
231. Power of Two
237. Delete Node in a Linked List
242. Valid Anagram
258. Add Digits
263. Ugly Number
283. Move Zeroes
284. Peeking Iterator
292. Nim Game
-
744. Find Smallest Letter Greater Than Target
1318. Minimum Flips to Make a OR b Equal to c
1502. Can Make Arithmetic Progression From Sequence
1572. Matrix Diagonal Sum
2148. Count Elements With Strictly Smaller and Greater Elements

Recursion Arg Bottom-up <1/4>
17. Letter Combinations of a Phone Number
46. Permutations
47. Permutations II
22. Generate Parentheses | f(L=['('],l=1,r=0)
78. Subsets | f(i=0, L=[[]]) concatenate add nums[i] or not add
90. Subsets II
110. Balanced Binary Tree
--
60*. Permutation Sequence

Recursion Arg Top-Down <2/4>
2. Add Two Numbers
21. Merge Two Sorted Lists
24. Swap Nodes in Pairs
56. Merge Intervals
57. Insert Interval
82. Remove Duplicates from Sorted List II
83. Remove Duplicates from Sorted List
89. Gray Code
92. Reverse Linked List II
94. Binary Tree Inorder Traversal
95. Unique Binary Search Trees II | f(L=list(range(1,1+n)))
96. Unique Binary Search Trees
98. Validate Binary Search Tree | ordered or not
99. Recover Binary Search Tree
100. Same Tree
101. Symmetric Tree
104. Maximum Depth of Binary Tree
105. Construct Binary Tree from Inorder and Preorder Traversal
106. Construct Binary Tree from Inorder and Postorder Traversal
108. Convert Sorted Array to Binary Search Tree
109. Convert Sorted List to Binary Search Tree
111. Minimum Depth of Binary Tree
112. Path Sum
129. Sum Root to Leaf Numbers
144. Binary Tree Preorder Traversal
145. Binary Tree Postorder Traversal
162. Find Peak Element | f(l,r), check max(L[m-1], L[m], L[m+1]) just like binary search
173. Binary Search Tree Iterator
203. Remove Linked List Elements
206. Reverse Linked List
215. Kth Largest Element in an Array | O(n) space quick select is easier
222. Count Complete Tree Nodes
226. Invert Binary Tree
230. Kth Smallest Element in a BST
234. Palindrome Linked List
241. Different Ways to Add Parentheses | similar to 95.
306. Additive Number | cut 3 parts sequentially, each do recursive call
-
427. Construct Quad Tree | f(i=0,j=0,ref=len(grid)//2) -> (Node, val if all same else -1); ref==0 or allsame is leaf otherwise non-leaf
652. Find Duplicate Subtrees | D:tuple(*dlr,-2,*ldr)->int; f(T=root)->DLR tuple(int), LDR tuple(int); if not T: return (-1,), (-1,)
912. Sort an Array
--
25*. Reverse Nodes in k-Group | split all sublists -> call 206. -> connect

Recursion Share Bottom-up <3/4>
77. Combinations | f(start=1, L=[]) put ele>=start to L
79. Word Search | retrievable f(position,match,visitS)
216. Combination Sum III | f(path,start,k,n)
--
30*. Substring with Concatenation of All Words
37*. Sudoku Solver | use L but not S to prevent unorder traversal, just pop and try 1-9, retrievable + must copy L since has L.pop  
51*. N-Queens | retreivable + no need copy B since B is invariant
140*. Word Break II

Recursion Share Top-Down <4/4>
102. Binary Tree Level Order Traversal
103. Binary Tree Zigzag Level Order Traversal
107. Binary Tree Level Order Traversal II
113. Path Sum II
114. Flatten Binary Tree to Linked List
116. Populating Next Right Pointers in Each Node
117. Populating Next Right Pointers in Each Node II
130. Surrounded Regions | whlie unvisit: f(position)
199. Binary Tree Right Side View
200. Number of Islands  | while unvisit: f(position)
235. Lowest Common Ancestor of a Binary Search Tree
236. Lowest Common Ancestor of a Binary Tree
257. Binary Tree Paths

Stack
20. Valid Parentheses | dict + lr matching
71. Simplify Path
150. Evaluate Reverse Polish Notation
155. Min Stack | deque (maintain Q[0] be min during push and pop) + stack
227. Basic Calculator II | totally 3 steps
225. Implement Stack using Queues
232. Implement Queue using Stacks
316. Remove Duplicate Letters | lastIdx, stack, stackS. stack is the final answer, so pop if top is larger and top will be scanned later. 
-
1081. Smallest Subsequence of Distinct Characters | same as 316

----------

Special
28. Find the Index of the First Occurrence in a String | lcps + KMP
146. LRU Cache | dict+double linked list OR OrderedDict with O.popitem(last=False)
208. Implement Trie (Prefix Tree) | Trie
211. Design Add and Search Words Data Structure | Trie + recursion
223. Rectangle Area | max(0,min()-max()) *****

Bad
6. Zigzag Conversion
26. Remove Duplicates from Sorted Array
27. Remove Element
29. Divide Two Integers
166. Fraction to Recurring Decimal
274. H-Index
275. H-Index II

Unknown
86. Partition List
